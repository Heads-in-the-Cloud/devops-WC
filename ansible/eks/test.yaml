---
- hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
    - eks_vars.yaml
  tasks:
    - name: Create Kubernetes Resources
      shell: |
        curl -s https://raw.githubusercontent.com/aws-samples/amazon-cloudwatch-container-insights/latest/k8s-deployment-manifest-templates/deployment-mode/daemonset/container-insights-monitoring/quickstart/cwagent-fluentd-quickstart.yaml \
          | sed "s/{{cluster_name}}/{{ CLUSTER_NAME }}/;s/{{region_name}}/{{ REGION }}/"

    # - name: Create Kubernetes Resources
    #   shell: |
    #     secrets="{{ lookup('aws_secret', SECRET_NAME, region=REGION, nested=true) }}"
    #     chmod +x parser.py
    #     db_user=$(python parser.py $secrets "{{ DB_USER }}" 2>&1 > /dev/null)
    #     db_password=$(python parser.py $secrets "{{ DB_PASSWORD }}" 2>&1 > /dev/null)
    #     db_host=$(python parser.py $secrets "{{ DB_HOST }}" 2>&1 > /dev/null)
    #     secret_key=$(python parser.py $secrets "{{ SECRET_KEY }}" 2>&1 > /dev/null)

    #     kubectl create secret generic db-info \
    #       --from-literal=db_user=$db_user \
    #       --from-literal=db_host=$db_host \
    #       --from-literal=db_user_password=$db_password
    #     kubectl create secret generic jwt-secret \
    #       --from-literal=secret_key=$secret_key
    # - name: Create Kubernetes Resources
    #   shell: |
    #     kubectl create secret generic db-info \
    #       --from-literal=db_user="{{ lookup('aws_secret', SECRET_NAME, region=REGION, nested=true) }}.{{ DB_USER }}" \
    #       --from-literal=db_host="{{ lookup('aws_secret', SECRET_NAME, region=REGION, nested=true) }}.{{ DB_HOST }}" \
    #       --from-literal=db_user_password="{{ lookup('aws_secret', SECRET_NAME, region=REGION, nested=true) }}.{{ DB_PASSWORD }}"
    #     kubectl create secret generic jwt-secret \
    #       --from-literal=secret_key="{{ lookup('aws_secret', SECRET_NAME, region=REGION, nested=true) }}.{{ SECRET_KEY }}"