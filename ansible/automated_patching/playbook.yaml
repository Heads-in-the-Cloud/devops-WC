---
- hosts: webservers
  gather_facts: false
  vars_files:
    - ./variables.yaml

  tasks:
  
      - name: Update and upgrade system
        shell: sudo apt update && sudo apt upgrade -y

      - name: Ensure that nginx is installed
        shell: |
          nginx --version > /dev/null
          if [ $? -eq "0" ]; then echo true; else echo false; fi
        register: nginx_installed

      - name: Install nginx
        script: ./modules/installation.py --nginx
        args:
            executable: python3

      - name: debug
        debug:
          msg: "{{ nginx_installed.stdout }}"

      - name: Ensure that nginx is enabled
        block:
        - name: Check if nginx is active
          shell: systemctl is-active --quiet nginx
        rescue:
        - name: Start nginx
          shell: sudo systemctl start nginx

      - name: Check if certbot is installed
        shell: |
          certbot --version > /dev/null
          if [ $? -eq "0" ]; then echo true; else echo false; fi
        register: certbot_installed

      - name: Install certbot
        script: ./modules/installation.py --certbot -d "{{ DOMAIN }}"
        args:
            executable: python3
        when: certbot_installed.stdout == 'false'

      - name: Get certbot version
        shell: certbot --version | sed 's/certbot //'
        register: certbot_version

      - name: Check if openssh is installed
        shell: if dpkg -l | grep openssh-client > /dev/null; then echo 'true'; else echo 'false'; fi
        register: openssh_installed

      - name: Install openssh
        script: ./modules/installation.py --openssh
        args:
            executable: python3
        when: openssh_installed.stdout == 'false'

      - name: Update certbot version to latest
        script: ./modules/installation.py --certbot --update
        args:
            executable: python3

      - name: Functional testing for certbot
        block:
          - name: Test certbot
            script: ./modules/tests.py -d "{{ DOMAIN }}" --certbot
            args:
                executable: python3
        rescue:
          - name: Rollback certbot
            shell: sudo /opt/certbot/bin/pip install certbot certbot-nginx=="{{ certbot_version.stdout }}" --force-reinstall

      - name: Functional testing for openssh
        block:
          - name: Test openssh
            script: ./modules/tests.py -d "{{ DOMAIN }}" --openssh
            args:
                executable: python3
        rescue:
          - name: Rollback openssh
            shell: echo Rollback openssh-client version
